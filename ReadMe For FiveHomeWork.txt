1.项目设计：
	通过监控网页中的推荐信息，获取推荐内容的扩展信息。
2.项目目的：
	a.完成《个股推荐》         --已完成
	b.完成《个股推荐内容收集》 --已完成
	c.完成《个股基本消息收集》 --未完成 数据库未设计
	d.完成《个股最新公告收集》 --未完成 数据库未设计


3.开发过程：
	a.http://data.eastmoney.com/report/通过页面获取每日更新信息
	开发过程中发现，在翻页后URL会加入一个随机编码，同时页面不会跳转，只重载内容。
	只能绕道截获数据流，发现内容是通过异步加载的，有单独json数据包，通过Headers找到api接口的访问路径：http://datainterface.eastmoney.com//EM_DataCenter/js.aspx?type=SR&sty=GGSR&js=var%20{jsname}={"data":[(x)],"pages":"(pc)","update":"(ud)","count":"(count)"}&ps=1&p=1&mkt=0&stat=0&cmd=2&code=
	通过测试发现，ps为pagesize，p为page 。完成了初步的信息抓取
	
	b.信息录入。
	多线程写入数据库。通过EF提供ORM框架，重新封装，管理数据库交互。
	
	c.通过Url的拼接。获取每个股票独立的推荐报告，通过解析HTML获取内容，为后面实现关键词查询，录入基础信息。更新2016年11月12日17:06:37（完成）

	d.（未完成）通过推荐股票，获取最新股票价格及股票技术指标 ，数据库结构设计中……

	e.（未完成）最终通过设置，完成根据条件（个股推荐中指定机构及推荐级别）将最新推荐个股发送邮件至个人邮箱。实现前台查询及浏览收集到的最新信息，后台周期性程序，定期更新数据
		
4.开发疑难。
	多线程数据库操作还在学习中  已解决  多线程事物开启及每个对象为独立的连接对象
	获取页面后中文解码问题	    已解决  关键点在于管理 分析页面Content-Type:text/html; charset=gb2312/UTF8
	

5.开发业务进度：
新建异常及数据丢失处理功能，新建异常表，通过数据库记录，异常及网络情况未处理的数据信息，实现重新增量更新及补全功能。

技术指标性数据库设计    初步设计方案，一个技术类别指标包含多个指数指标（一对多），每一个指标下同时也有多组数组（一对多），每个数据指标的版本周期（一对一）。最终数据库结构需要支持，指定指标组合，进行指数计算，配合数据分析。（目前没有找到比较好的技术指标数据源）。

6.开发小结：
	想通过设计抽象类，统一完善开闭原则，实现应用部分设计模式。